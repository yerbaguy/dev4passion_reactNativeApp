import { EventEmitter2 } from 'eventemitter2';
import KeyExchange from './KeyExchange';
export default class WebRTC extends EventEmitter2 {
    handshakeDone: boolean;
    isOriginator: boolean;
    clientsConnected: boolean;
    clientsReady: boolean;
    socket: any;
    webrtc: any;
    dataChannel: any;
    keyExchange: KeyExchange;
    RTCPeerConnection: any;
    RTCSessionDescription: any;
    RTCIceCandidate: any;
    reconnect: boolean;
    constructor({ otherPublicKey, webRTCLib, commLayer, reconnect, transports }: {
        otherPublicKey: any;
        webRTCLib: any;
        commLayer: any;
        reconnect: any;
        transports: any;
    });
    setupWebrtc(): void;
    connectToChannel(id: any): void;
    onMessage(message: any): boolean;
    sendMessage(message: any): any;
    createChannel(): any;
    pause(): void;
    resume(): void;
    disconnect(): void;
}
