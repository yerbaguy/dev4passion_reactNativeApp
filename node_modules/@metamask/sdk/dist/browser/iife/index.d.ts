import { CommunicationLayerPreference } from '@metamask/sdk-communication-layer';
import { WakeLockType } from './Platform';
import { DappMetadata } from './constants';
declare type MetaMaskSDKOptions = {
    injectProvider?: boolean;
    forceInjectProvider?: boolean;
    forceDeleteProvider?: boolean;
    checkInstallationImmediately?: boolean;
    forceRestartWalletConnect?: boolean;
    checkInstallationOnAllCalls?: boolean;
    preferDesktop?: boolean;
    openDeeplink?: (string: any) => void;
    useDeeplink?: boolean;
    wakeLockType?: WakeLockType;
    WalletConnectInstance?: any;
    shouldShimWeb3?: boolean;
    webRTCLib?: any;
    communicationLayerPreference?: CommunicationLayerPreference;
    transports?: string[];
    dappMetadata?: DappMetadata;
    timer?: any;
    enableDebug?: boolean;
};
export default class MetaMaskSDK {
    provider: any;
    constructor({ dappMetadata, injectProvider, forceInjectProvider, forceDeleteProvider, shouldShimWeb3, checkInstallationImmediately, checkInstallationOnAllCalls, preferDesktop, openDeeplink, useDeeplink, wakeLockType, communicationLayerPreference, WalletConnectInstance, forceRestartWalletConnect, webRTCLib, transports, timer, enableDebug, }?: MetaMaskSDKOptions);
    getWalletConnectConnector: () => any;
    getProvider(): any;
    getUniversalLink(): any;
}
declare global {
    interface Window {
        ReactNativeWebView: any;
        ethereum: any;
        extension: any;
        MSStream: any;
    }
}
export {};
